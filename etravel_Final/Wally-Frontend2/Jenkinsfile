pipeline {
    agent any

    environment {
        NODE_VERSION = '14.17.0' // Specify the exact Node.js version
        NODE_HOME = "C:\\Program Files\\nodejs"
    }

    stages {
        stage('Checkout') {
            steps {
                // Clone the repository from GitHub
                git 'https://github.com/your-repo/your-angularjs-app.git'
            }
        }

        stage('Install Node.js') {
            steps {
                // Download and install Node.js
                bat '''
                @echo off
                curl -o nodejs-installer.msi https://nodejs.org/dist/v%NODE_VERSION%/node-v%NODE_VERSION%-x64.msi
                msiexec /i nodejs-installer.msi /quiet /norestart
                if %ERRORLEVEL% neq 0 exit /b %ERRORLEVEL%
                '''
                
                // Update the PATH environment variable
                bat '''
                setx PATH "%NODE_HOME%;%PATH%"
                '''
            }
        }

        stage('Install Dependencies') {
            steps {
                // Ensure npm is recognized and install Angular CLI and project dependencies
                bat '''
                @echo off
                "%NODE_HOME%\\npm" install -g @angular/cli
                "%NODE_HOME%\\npm" install
                '''
            }
        }

        stage('Build') {
            steps {
                // Build the AngularJS application
                bat '"%NODE_HOME%\\ng" build --prod'
            }
        }

        stage('Deploy') {
            steps {
                // Serve the application on localhost:4200
                // Normally you wouldn't use `ng serve` for production, but as per the requirement
                bat 'start /B "%NODE_HOME%\\ng" serve --host 0.0.0.0 --port 4200'
            }
        }
    }

    post {
        always {
            // Clean up and archive artifacts if needed
            archiveArtifacts artifacts: 'dist/**', allowEmptyArchive: true
            cleanWs()
        }
        success {
            echo 'Build and deployment succeeded!'
        }
        failure {
            echo 'Build or deployment failed.'
        }
    }
}
